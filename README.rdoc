== Prerequisites

* bundler

* git

* Node.js

* PostgreSQL

* Ruby 2.x

== Installation

On Debian 8 (Jessie) or later and Ubuntu 14.10 (Utopic Unicorn) or later:

<tt># apt-get install bundler git nodejs postgresql postgresql-server-dev-9.4 ruby ruby-dev</tt>

On Ubuntu 14.04 (Trusty Tahr):

<tt># apt-get install bundler git nodejs postgresql postgresql-server-dev-9.3 ruby2.0 ruby2.0-dev</tt>

<tt># rm /usr/bin/ruby /usr/bin/gem /usr/bin/irb /usr/bin/rdoc /usr/bin/erb</tt>

<tt># for f in ruby gem irb rdoc erb; do ln -s /usr/bin/${f}2.0 /usr/bin/$f; done</tt>

<tt># gem update --system</tt>

<tt># gem pristine --all</tt>

Then, on all systems:

<tt>$ git clone https://[username]@github.com/valegro/subsright.git</tt>

<tt>$ cd subsright</tt>

<tt>$ git checkout master</tt>

<tt>$ bundle install</tt>

<tt>$ sudo gem pristine --all</tt>

=== Development

<tt>$ sudo -u postgres createuser -d $USER</tt>

<tt>$ rake db:setup</tt>

<tt>$ rake spec</tt>

<tt>$ rails s</tt>

You can now visit http://localhost:3000 which will initialise the default configuration.

You can then log at http://localhost:3000/admin as admin@example.com with the initial
default password "password".  You can now create and edit admin users and the site configuration.

=== Production

<tt>$ sudo -u postgres createuser -d -P subsright</tt>

<tt>$ SUBSRIGHT_DATABASE_PASSWORD='<em>password</em>' RAILS_ENV=production rake db:setup</tt>

<tt>$ SUBSRIGHT_DATABASE_PASSWORD='<em>password</em>' RAILS_ENV=production rake assets:precompile</tt>

<tt>$ rake secret</tt>

<tt>$ SECRET_KEY_BASE='<em>secret</em> SUBSRIGHT_DATABASE_PASSWORD='<em>password</em>' RAILS_ENV=production bundle exec rackup -E production</tt>

You can now visit http://localhost:9292 which will initialise the default configuration.

You can then log at http://localhost:9292/admin as admin@example.com with the initial
default password "password".  You can now create and edit admin users and the site configuration.
